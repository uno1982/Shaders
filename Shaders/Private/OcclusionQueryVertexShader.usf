// Copyright Epic Games, Inc. All Rights Reserved.

/*=============================================================================
	OcclusionQueryVertexShader.usf: Vertex shader for drawing occlusion queries.
=============================================================================*/

#include "Common.ush"

// BEGIN META SECTION - GPU Occlusion Query Optimizations
#define USE_MULTI_VIEW (INSTANCED_STEREO || MOBILE_MULTI_VIEW)

#if USE_MULTI_VIEW
float4 StencilPosAndScale[2];
#else
float4 StencilPosAndScale;
#endif

void Main(
	in float4 InPosition : ATTRIBUTE0,
	out float4 OutPosition : SV_POSITION
#if INSTANCED_STEREO
	, uint InstanceId : SV_InstanceID
#elif MOBILE_MULTI_VIEW
	, in uint InViewId : SV_ViewID
#endif
#if USE_MULTI_VIEW_ID_INTERPOLANT
	, out uint OutViewId : VIEW_ID
#endif
	)
{
#if INSTANCED_STEREO
	uint InViewId = GetEyeIndex(InstanceId);
#endif
#if USE_MULTI_VIEW_ID_INTERPOLANT
	OutViewId = InViewId;
#endif
#if USE_MULTI_VIEW
	ResolvedView = ResolveView(InViewId);
	float4 PosAndScale = StencilPosAndScale[InViewId];
#else
	ResolvedView = ResolveView();
	float4 PosAndScale = StencilPosAndScale;
#endif

	float3 TransformedPosition = InPosition.xyz * PosAndScale.w + PosAndScale.xyz;
	OutPosition = mul(float4(TransformedPosition, 1), ResolvedView.TranslatedWorldToClip);
}
// END META SECTION - GPU Occlusion Query Optimizations